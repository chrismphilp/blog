{"version":3,"sources":["components/navbar/NavigationBar.tsx","components/footer/Footer.tsx","components/about/About.tsx","components/dashboard/posts/PostContent.tsx","assets/cloud-formation/CloudFormation.data.tsx","assets/cloud-formation/CloudFormation.tsx","components/dashboard/posts/gifs/GifWrapper.tsx","assets/tattoo-removal/TattooRemoval.data.tsx","assets/tattoo-removal/TattooRemoval.tsx","components/dashboard/posts/PostContainer.tsx","components/dashboard/filter/FilterCheckboxRow.tsx","components/dashboard/filter/FilterCheckboxList.tsx","components/dashboard/filter/FilterExpansionPanel.tsx","components/dashboard/filter/FilterContainer.tsx","components/dashboard/header/banner/Banner.tsx","assets/infinite-madness/InfiniteMadness.data.tsx","assets/PostCollection.tsx","components/dashboard/Dashboard.tsx","assets/infinite-madness/InfiniteMadness.tsx","components/router/Router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavigationBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","date","moment","format","updateTime","inherits","createClass","key","value","_this2","setInterval","setState","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","Item","style","color","Component","Footer","apply","arguments","About","useStyles","makeStyles","theme","mainFeaturedPost","content","position","backgroundColor","palette","grey","common","white","marginBottom","spacing","backgroundImage","concat","widgetImage","backgroundSize","backgroundRepeat","backgroundPosition","borderRadius","overlay","top","bottom","right","left","mainFeaturedPostContent","defineProperty","padding","breakpoints","up","paddingRight","PostContent","classes","Paper","display","src","alt","Grid","container","item","md","Typography","component","gutterBottom","title","paragraph","subTitle","children","cloudFormationData","author","category","link","widgetImageAlt","contentKey","CloudFormation","posts_PostContent","GifWrapper","styles","contentFiller","gifDisplay","flex","tattooRemovalData","TattooRemoval","GifWrapper_GifWrapper","width","height","allowFullScreen","root","flexWrap","justifyContent","overflow","background","paper","cursor","icon","withRouter","GridList","cellHeight","posts","map","GridListTile","onClick","history","push","GridListTileBar","subtitle","actionIcon","IconButton","Info_default","FilterCheckboxRow","_useState","useState","_useState2","slicedToArray","checked","setChecked","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","edge","tabIndex","ListItemText","primary","labelText","listRoot","maxWidth","FilterCheckboxList","filterItems","forEach","post","includes","objectKey","getFilterItems","List","filter_FilterCheckboxRow","paddingTop","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","FilterExpansionPanel","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","id","panelTitle","ExpansionPanelDetails","filter_FilterCheckboxList","FilterContainer","filter_FilterExpansionPanel","Banner","Jumbotron","fluid","Container","Row","Col","xs","filter_FilterContainer","infiniteMadnessData","PostCollection","CloudFormationData","InfiniteMadnessData","TattooRemovalData","Dashboard","banner_Banner","posts_PostContainer","paddingBottom","InfiniteMadness","Router","react_router","exact","path","App","react_router_dom","basename","NavigationBar_NavigationBar","router_Router","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9626bcb6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\ninterface NavbarState {\r\n  date: string;\r\n}\r\n\r\nexport class NavigationBar extends Component<{}, NavbarState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {date: moment().format('MMMM Do YYYY, h:mm:ss a')};\r\n    this.updateTime();\r\n  }\r\n\r\n  private updateTime(): void {\r\n    setInterval(\r\n      () => this.setState({date: moment().format('MMMM Do YYYY, h:mm:ss a')}),\r\n      1000\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"sm\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">Philpy Thought Shower</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n        <Navbar.Collapse>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"about\">About Me</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Item style={{color: 'white'}}>{this.state.date}</Nav.Item>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Footer extends Component {\r\n  render() {\r\n    return(\r\n      <div/>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>About me.</h1>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { FunctionComponent, ReactElement } from 'react';\r\nimport { Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\r\nimport { IPostCollection } from '../../../assets/PostCollection';\r\n\r\ntype PostContentProps = {\r\n  content: IPostCollection;\r\n  children?: ReactElement;\r\n}\r\n\r\nconst PostContent: FunctionComponent<PostContentProps> = (props) => {\r\n  const classes = useStyles(props.content);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.mainFeaturedPost}>\r\n        <img style={{display: 'none'}}\r\n             src={props.content.widgetImage}\r\n             alt=\"background\"/>\r\n        <div className={classes.overlay}/>\r\n        <Grid container>\r\n          <Grid item md={6}>\r\n            <div className={classes.mainFeaturedPostContent}>\r\n              <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n                {props.content.title}\r\n              </Typography>\r\n              <Typography variant=\"h5\" color=\"inherit\" paragraph>\r\n                {props.content.subTitle}\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles<Theme, IPostCollection>((theme: Theme) => ({\r\n  mainFeaturedPost: content => ({\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing(4),\r\n    backgroundImage: `url(${content.widgetImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    borderRadius: 0\r\n  }),\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: 'rgba(0,0,0,.3)'\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0\r\n    }\r\n  }\r\n}));\r\n\r\nexport default PostContent;","import { IPostCollection } from '../PostCollection';\r\n\r\nconst cloudFormationData: IPostCollection = {\r\n  'title': 'Every Cloud Has a Silver... What?',\r\n  'subTitle': 'The formation of clouds',\r\n  'author': 'Christopher Philp',\r\n  'category': 'Science',\r\n  'link': '/cloud-theory',\r\n  'date': '15/07/2019',\r\n  'widgetImage': 'https://hitinfrastructure.com/images/site/article_headers/_normal/Cloud.jpg',\r\n  'widgetImageAlt': 'Cloud',\r\n  'contentKey': 'cloudFormation'\r\n};\r\n\r\nexport default cloudFormationData;\r\n","import React, { FunctionComponent } from 'react';\r\nimport PostContent from '../../components/dashboard/posts/PostContent';\r\nimport content from './CloudFormation.data';\r\n\r\nconst CloudFormation: FunctionComponent = () => {\r\n  return (\r\n    <PostContent content={content}>\r\n      <div>\r\n        <h5>\r\n          Warning, there will be a <i>blizzard</i> of cloud related puns in this article.\r\n        </h5>\r\n        <h5>\r\n          So lets (rain)drop into the facts. Clouds are made of up of water droplets and ice crystals, small and\r\n          light enough to float in the air. However, how does this water vapour remain together? That is\r\n          through something known as the <i>condensation nuclei</i>. This is a particle such as a piece of\r\n          pollen or dust, which the water vapour condense onto. When billions of these particles collect together\r\n          they form a visible cloud.\r\n        </h5>\r\n        <h5>\r\n          Hopefully by this point you're on <i>cloud nine</i>, and most importantly, have vastly improved your\r\n          knowledge of the billions of droplets that hang over you every day.\r\n        </h5>\r\n      </div>\r\n    </PostContent>\r\n  );\r\n};\r\n\r\nexport default CloudFormation;","import React from 'react';\r\n\r\nexport const GifWrapper = (props: any) => {\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.contentFiller}/>\r\n      <div style={styles.gifDisplay}>{props.children}</div>\r\n      <div style={styles.contentFiller}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex'\r\n  },\r\n  gifDisplay: {\r\n    flex: 3\r\n  },\r\n  contentFiller: {\r\n    flex: 1\r\n  }\r\n};","import { IPostCollection } from '../PostCollection';\r\n\r\nconst tattooRemovalData: IPostCollection = {\r\n  \"title\": \"The Wonders of Tattoo Removal\",\r\n  \"subTitle\": \"How can 'permanent' ink be unwritten?\",\r\n  \"author\": \"Christopher Philp\",\r\n  \"category\": \"Science\",\r\n  \"link\": \"/tattoo-removal\",\r\n  \"date\": \"24/06/2019\",\r\n  \"widgetImage\": \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/cosmetician-performing-a-laser-depilation-on-a-royalty-free-image-1582657775.jpg?crop=1.00xw:0.751xh;0,0.173xh&resize=980:*\",\r\n  \"widgetImageAlt\": \"React Logo\",\r\n  \"contentKey\": \"tattooRemoval\"\r\n};\r\n\r\nexport default tattooRemovalData;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { GifWrapper } from '../../components/dashboard/posts/gifs/GifWrapper';\r\nimport PostContent from '../../components/dashboard/posts/PostContent';\r\nimport content from './TattooRemoval.data';\r\n\r\nconst TattooRemoval: FunctionComponent = () => {\r\n  return (\r\n    <PostContent content={content}>\r\n      <div>\r\n        <h5>\r\n          <b>Lasers</b>. However, these are not the type that you saw in those classic James Bond movies, slowly\r\n          advancing to the hero's groin. These are known as Q-switched lasers and are the most common way to remove\r\n          tattoos. Before getting to the removal stage however, it is important to understand how tattoo's themselves\r\n          remain in the body.\r\n        </h5>\r\n        <h5>\r\n          Tattooing involves inserting ink into the dermal tissue layer of the skin (found under the epidermis - the\r\n          outermost layer of the skin). Once the ink has entered, normally using a tattoo needle, the pigment begins\r\n          to\r\n          disperse itself through the epidermis and the upper dermis. Once it has entered these layers of the skin,\r\n          the\r\n          body sends out one of it's billions of personal protection operatives for foreign agents - <b>Phagocytes</b>.\r\n        </h5>\r\n        <GifWrapper>\r\n          <iframe src='https://www.gfycat.com/ifr/essentialminiaturecuckoo'\r\n                  title=\"Phagocyte\"\r\n                  width='640'\r\n                  height='346' allowFullScreen/>\r\n        </GifWrapper>\r\n        <h5>\r\n          The main function of Phagocytes within the human body is to protect from harmful particles, and are\r\n          essential\r\n          for shielding the human body from infections and to provide subsequent immunity. They are attracted to\r\n          foreign\r\n          particles by chemical signals released by the body. As seen above, when eventually coming into contact with\r\n          their target, they bind, and then engulf them. Here-in lies the problem; the ink particles are too big to be\r\n          ingested by the Phagocytes, so instead are held in place in the layers of skin by its Collagen network (the\r\n          skins main structural protein).\r\n        </h5>\r\n        <h5>\r\n          So now you may be beginning to get an <i>inkling</i> as to how tattoos can be removed. The aforementioned\r\n          Q-switched lasers emit a centralised burst of light, targeting a specific spectrum of color represented in\r\n          the tattoo (e.g. black, red, etc.). This means that for tattoos with differing colours, multiple lasers\r\n          must be used. The laser is fired at these pigments, and as it hits, in nanoseconds they are heated up by\r\n          thousands of degrees, eventually emitting the contained energy as a shockwave, in a process known\r\n          as <b>Photothermolysis</b>. The shockwave ripples through the dermis of the skin, causing weaker structures\r\n          to break apart, while larger, stronger ones, merely vibrate. Once the tattoo pigment has been broken up into\r\n          smaller fragments, the Phagocytes can then fully engulf and dispose of them.\r\n        </h5>\r\n        <h5>\r\n          The whole process can take 6-8 sessions of laser removal for a normal sized tattoo, and up to 10 sessions\r\n          for\r\n          larger tattoos, with a total cost from anywhere between £270 to £600 <a\r\n          href=\"https://graziadaily.co.uk/life/real-life/10-things-need-know-laser-tattoo-removal/\">[2]</a>.\r\n        </h5>\r\n        <h5>\r\n          So, given the fact that over 1 in 4 individuals are reported as regretting ever getting a tattoo <a\r\n          href=\"https://www.advdermatology.com/blog/statistics-surrounding-tattoo-regret\">[1]</a>, there's hope on\r\n          the horizon with this amazing technology. So your mate Dave with his 'sick' <b>NO RAGRETS</b> graffiti\r\n          across\r\n          his chest can still have some optimism.\r\n        </h5>\r\n      </div>\r\n    </PostContent>\r\n  );\r\n};\r\n\r\nexport default TattooRemoval;","import React, { FunctionComponent } from 'react';\r\nimport { GridList, GridListTile, GridListTileBar, IconButton, makeStyles, Theme } from '@material-ui/core';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { IPostCollection } from '../../../assets/PostCollection';\r\n\r\ntype PostContainerProps = {\r\n  posts: IPostCollection[];\r\n};\r\n\r\nconst PostContainer: FunctionComponent<PostContainerProps & RouteComponentProps> = (props) => {\r\n\r\n  const handlePostSwitch = (link: string): void => props.history.push(link);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={250}>\r\n        {props.posts.map((content, key) =>\r\n          <GridListTile key={key}>\r\n            <img src={content.widgetImage}\r\n                 alt={content.widgetImageAlt}\r\n                 onClick={() => handlePostSwitch(content.link)}/>\r\n            <GridListTileBar title={content.title}\r\n                             subtitle={<span>by: {content.author}</span>}\r\n                             actionIcon={\r\n                               <IconButton className={classes.icon}\r\n                                           href={''}>\r\n                                 <InfoIcon/>\r\n                               </IconButton>\r\n                             }/>\r\n          </GridListTile>\r\n        )}\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n    cursor: 'pointer'\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)'\r\n  }\r\n}));\r\n\r\nexport default withRouter(PostContainer);\r\n","import React, { FunctionComponent, useState } from 'react';\r\nimport { Checkbox, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\n\r\ntype FilterCheckboxRowProps = {\r\n  labelText: string;\r\n};\r\n\r\nconst FilterCheckboxRow: FunctionComponent<FilterCheckboxRowProps> = (props) => {\r\n  const [checked, setChecked] = useState(false);\r\n  const handleClick = () => setChecked(!checked);\r\n\r\n  return (\r\n    <ListItem role={undefined} dense button onClick={() => handleClick()}>\r\n      <ListItemIcon>\r\n        <Checkbox edge=\"start\"\r\n                  checked={checked}\r\n                  tabIndex={-1}/>\r\n      </ListItemIcon>\r\n      <ListItemText primary={props.labelText}/>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default FilterCheckboxRow;","import React, { FunctionComponent } from 'react';\r\nimport { List, makeStyles, Theme } from '@material-ui/core';\r\nimport { IPostCollection } from '../../../assets/PostCollection';\r\nimport FilterCheckboxRow from './FilterCheckboxRow';\r\n\r\ntype FilterCheckboxListProps = {\r\n  posts: IPostCollection[];\r\n  objectKey: keyof IPostCollection;\r\n};\r\n\r\nconst FilterCheckboxList: FunctionComponent<FilterCheckboxListProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const getFilterItems = () => {\r\n    const filterItems: string[] = [];\r\n    props.posts.forEach((post) => {\r\n      if (!filterItems.includes(post[props.objectKey])) {\r\n        filterItems.push(post[props.objectKey]);\r\n      }\r\n    });\r\n    return filterItems;\r\n  };\r\n\r\n  const filterItems = getFilterItems();\r\n\r\n  return (\r\n    <List className={classes.listRoot}>\r\n      {filterItems.map((value, key) => <FilterCheckboxRow key={key}\r\n                                                          labelText={value}/>\r\n      )}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  listRoot: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nexport default FilterCheckboxList;","import React, { FunctionComponent } from 'react';\r\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport { IPostCollection } from '../../../assets/PostCollection';\r\nimport FilterCheckboxList from './FilterCheckboxList';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\ntype FilterExpansionPanelProps = {\r\n  posts: IPostCollection[];\r\n  objectKey: keyof IPostCollection;\r\n  panelTitle: string;\r\n};\r\n\r\nconst FilterExpansionPanel: FunctionComponent<FilterExpansionPanelProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}\r\n                               aria-controls=\"panel1a-content\"\r\n                               id=\"panel1a-header\"\r\n                               href={''}>\r\n          <Typography className={classes.heading}>{props.panelTitle}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <FilterCheckboxList posts={props.posts}\r\n                              objectKey={props.objectKey}/>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingTop: 5\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular\r\n  }\r\n}));\r\n\r\nexport default FilterExpansionPanel;","import React, { FunctionComponent } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport FilterExpansionPanel from './FilterExpansionPanel';\r\nimport { IPostCollection } from '../../../assets/PostCollection';\r\n\r\ntype FilterContainerProps = {\r\n  posts: IPostCollection[];\r\n};\r\n\r\nconst FilterContainer: FunctionComponent<FilterContainerProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FilterExpansionPanel posts={props.posts}\r\n                            panelTitle={'Category'}\r\n                            objectKey={'category'}/>\r\n\r\n      <FilterExpansionPanel posts={props.posts}\r\n                            panelTitle={'Sort By'}\r\n                            objectKey={'category'}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nexport default FilterContainer;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { Col, Container, Jumbotron, Row } from 'react-bootstrap';\r\nimport FilterContainer from '../../filter/FilterContainer';\r\nimport { IPostCollection } from '../../../../assets/PostCollection';\r\n\r\ntype BannerProps = {\r\n  posts: IPostCollection[];\r\n};\r\n\r\nconst Banner: FunctionComponent<BannerProps> = (props) => {\r\n  return (\r\n    <Jumbotron fluid>\r\n      <Container>\r\n        <Row>\r\n          <Col md={6} xs={12}>\r\n            <h2>Informing new readers quickly and efficiently about what's most interesting in this post's contents</h2>\r\n            <p>\r\n              This is a modified jumbotron that occupies the entire horizontal space of\r\n              its parent.\r\n            </p>\r\n          </Col>\r\n          <Col md={6} xs={12}>\r\n            <FilterContainer posts={props.posts}/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default Banner;","import { IPostCollection } from '../PostCollection';\r\n\r\nconst infiniteMadnessData: IPostCollection = {\r\n  \"title\": \"Infinite Madness\",\r\n  \"subTitle\": \"The formation of clouds\",\r\n  \"author\": \"Christopher Philp\",\r\n  \"category\": \"Mathematics\",\r\n  \"link\": \"/infinite-madness\",\r\n  \"date\": \"29/09/2019\",\r\n  \"widgetImage\": \"https://wp-assets.futurism.com/2019/04/hubble-data-universe-expanding-faster-1200x630.png\",\r\n  \"widgetImageAlt\": \"Infinity\",\r\n  \"contentKey\": \"infiniteMadness\"\r\n};\r\n\r\nexport default infiniteMadnessData;\r\n","import TattooRemovalData from './tattoo-removal/TattooRemoval.data';\r\nimport CloudFormationData from './cloud-formation/CloudFormation.data';\r\nimport InfiniteMadnessData from './infinite-madness/InfiniteMadness.data';\r\n\r\nexport interface IPostCollection {\r\n  title: string;\r\n  subTitle: string;\r\n  author: string;\r\n  category: string;\r\n  link: string;\r\n  date: string;\r\n  widgetImage: string;\r\n  widgetImageAlt: string;\r\n  contentKey: string;\r\n}\r\n\r\nexport const PostCollection: IPostCollection[] = [\r\n  CloudFormationData,\r\n  InfiniteMadnessData,\r\n  TattooRemovalData\r\n];","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport PostContainer from './posts/PostContainer';\r\nimport Banner from './header/banner/Banner';\r\nimport { IPostCollection, PostCollection } from '../../assets/PostCollection';\r\n\r\ntype DashboardState = {\r\n  posts: IPostCollection[];\r\n};\r\n\r\nexport default class Dashboard extends Component<{}, DashboardState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      posts: PostCollection\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container style={styles.container}>\r\n        <Banner posts={this.state.posts}/>\r\n        <PostContainer posts={this.state.posts}/>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    paddingTop: 25,\r\n    paddingBottom: 25\r\n  }\r\n};\r\n","import React, { FunctionComponent } from 'react';\r\nimport PostContent from '../../components/dashboard/posts/PostContent';\r\nimport content from './InfiniteMadness.data';\r\n\r\nconst InfiniteMadness: FunctionComponent = () => {\r\n\r\n  return (\r\n    <PostContent content={content}>\r\n      <div/>\r\n    </PostContent>\r\n  )\r\n};\r\n\r\nexport default InfiniteMadness;","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport About from '../about/About';\r\nimport CloudFormation from '../../assets/cloud-formation/CloudFormation';\r\nimport TattooRemoval from '../../assets/tattoo-removal/TattooRemoval';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport InfiniteMadness from '../../assets/infinite-madness/InfiniteMadness';\r\n\r\nconst Router = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path='/' component={Dashboard}/>\r\n        <Route path='/about' component={About}/>\r\n        <Route path='/tattoo-removal' component={TattooRemoval}/>\r\n        <Route path='/cloud-theory' component={CloudFormation}/>\r\n        <Route path='/infinite-madness' component={InfiniteMadness}/>\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Router;","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { NavigationBar } from './components/navbar/NavigationBar';\r\nimport { Footer } from './components/footer/Footer';\r\nimport Router from './components/router/Router';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter basename={'/blog'}>\r\n        <NavigationBar/>\r\n        <Router/>\r\n      </BrowserRouter>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport const register = (config?: Config) => {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst registerValidSW = (swUrl: string, config?: Config) => {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n};\r\n\r\nconst checkValidServiceWorker = (swUrl: string, config?: Config) => {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n};\r\n\r\nexport const unregister = () => {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}