{"version":3,"sources":["components/navbar/NavigationBar.tsx","components/footer/Footer.tsx","components/about/About.tsx","components/dashboard/posts/PostContent.tsx","assets/cloud-formation/CloudFormation.tsx","components/dashboard/posts/gifs/GifWrapper.tsx","assets/tattoo-removal/TattooRemoval.tsx","components/dashboard/posts/Posts.tsx","assets/PostCollection.tsx","components/dashboard/posts/PostContainer.tsx","components/dashboard/header/banner/Banner.tsx","components/dashboard/Dashboard.tsx","components/router/Router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavigationBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","date","moment","format","updateTime","inherits","createClass","key","value","_this2","setInterval","setState","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","Item","style","color","Component","Footer","apply","arguments","About","PostContent","Card","styles","contentContainer","Header","as","subTitle","Body","postContent","children","backgroundColor","contentBorder","borderLeft","borderRight","borderBottom","borderTop","borderWidth","borderColor","borderStyle","fontFamily","textAlign","CloudFormation","PostContent_PostContent","content","GifWrapper","container","contentFiller","gifDisplay","display","flex","TattooRemoval","GifWrapper_GifWrapper","src","title","width","height","allowFullScreen","Posts","cardFont","Img","entry","widgetImage","Text","PostCollection","CloudFormationPost","TattooRemovalPost","PostContainer","link","redirect","currentRedirectState","react_router","push","to","concat","match","url","slice","CardColumns","map","onClick","handlePostSwitch","cardContainer","Posts_Posts","cursor","Banner","Jumbotron","fluid","Container","Dashboard","banner_Banner","PostContainer_PostContainer","paddingTop","paddingBottom","Router","exact","path","component","App","react_router_dom","basename","NavigationBar_NavigationBar","router_Router","Footer_Footer","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0daf1425.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\ninterface NavbarState {\r\n  date: string;\r\n}\r\n\r\nexport class NavigationBar extends Component<{}, NavbarState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {date: moment().format('MMMM Do YYYY, h:mm:ss a')};\r\n    this.updateTime();\r\n  }\r\n\r\n  private updateTime(): void {\r\n    setInterval(\r\n      () => this.setState({date: moment().format('MMMM Do YYYY, h:mm:ss a')}),\r\n      1000\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"sm\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">Philpy Thought Shower</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n        <Navbar.Collapse>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"about\">About Me</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Item style={{color: 'white'}}>{this.state.date}</Nav.Item>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Footer extends Component {\r\n  render() {\r\n    return(\r\n      <div/>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>About me.</h1>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component, CSSProperties, ReactElement } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\ninterface PostContentProps {\r\n  subTitle: string;\r\n  children: ReactElement;\r\n}\r\n\r\nexport default class PostContent extends Component<PostContentProps, {}> {\r\n  render() {\r\n    return (\r\n      <Card style={styles.contentContainer}>\r\n        <Card.Header as=\"h5\">{this.props.subTitle}</Card.Header>\r\n        <Card.Body style={styles.postContent}>{this.props.children}</Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  contentContainer: {\r\n    backgroundColor: '#ffffff'\r\n  } as CSSProperties,\r\n  contentBorder: {\r\n    borderLeft: 5,\r\n    borderRight: 5,\r\n    borderBottom: 5,\r\n    borderTop: 0,\r\n    borderWidth: 1,\r\n    borderColor: '#e6e6e6',\r\n    borderStyle: 'solid'\r\n  },\r\n  postContent: {\r\n    fontFamily: 'Source Sans Pro',\r\n    textAlign: 'justify'\r\n  } as CSSProperties\r\n};","import React, { Component } from 'react';\r\nimport content from './cloudFormation.json';\r\nimport PostContent from '../../components/dashboard/posts/PostContent';\r\n\r\nexport default class CloudFormation extends Component {\r\n  render() {\r\n    return (\r\n      <PostContent subTitle={content.subTitle}>\r\n        <div>\r\n          <h5>\r\n            Warning, there will be a <i>blizzard</i> of cloud related puns in this article.\r\n          </h5>\r\n          <h5>\r\n            So lets (rain)drop into the facts. Clouds are made of up of water droplets and ice crystals, small and\r\n            light enough to float in the air. However, how does this water vapour remain together? That is\r\n            through something known as the <i>condensation nuclei</i>. This is a particle such as a piece of\r\n            pollen or dust, which the water vapour condense onto. When billions of these particles collect together\r\n            they form a visible cloud.\r\n          </h5>\r\n          <h5>\r\n            Hopefully by this point you're on <i>cloud nine</i>, and most importantly, have vastly improved your\r\n            knowledge of the billions of droplets that hang over you every day.\r\n          </h5>\r\n        </div>\r\n      </PostContent>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport const GifWrapper = (props: any) => {\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.contentFiller}/>\r\n      <div style={styles.gifDisplay}>{props.children}</div>\r\n      <div style={styles.contentFiller}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex'\r\n  },\r\n  gifDisplay: {\r\n    flex: 3\r\n  },\r\n  contentFiller: {\r\n    flex: 1\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport { GifWrapper } from '../../components/dashboard/posts/gifs/GifWrapper';\r\nimport PostContent from '../../components/dashboard/posts/PostContent';\r\nimport content from './tattooRemoval.json';\r\n\r\ninterface TattooRemovalProps {\r\n  match: any;\r\n}\r\n\r\nexport default class TattooRemoval extends Component<TattooRemovalProps, {}> {\r\n  render() {\r\n    return (\r\n      <PostContent subTitle={content.subTitle}>\r\n        <div>\r\n          <h5>\r\n            <b>Lasers</b>. However, these are not the type that you saw in those classic James Bond movies, slowly\r\n            advancing to the hero's groin. These are known as Q-switched lasers and are the most common way to remove\r\n            tattoos. Before getting to the removal stage however, it is important to understand how tattoo's themselves\r\n            remain in the body.\r\n          </h5>\r\n          <h5>\r\n            Tattooing involves inserting ink into the dermal tissue layer of the skin (found under the epidermis - the\r\n            outermost layer of the skin). Once the ink has entered, normally using a tattoo needle, the pigment begins\r\n            to\r\n            disperse itself through the epidermis and the upper dermis. Once it has entered these layers of the skin,\r\n            the\r\n            body sends out one of it's billions of personal protection operatives for foreign agents - <b>Phagocytes</b>.\r\n          </h5>\r\n          <GifWrapper>\r\n            <iframe src='https://www.gfycat.com/ifr/essentialminiaturecuckoo'\r\n                    title=\"Phagocyte\"\r\n                    width='640'\r\n                    height='346' allowFullScreen/>\r\n          </GifWrapper>\r\n          <h5>\r\n            The main function of Phagocytes within the human body is to protect from harmful particles, and are\r\n            essential\r\n            for shielding the human body from infections and to provide subsequent immunity. They are attracted to\r\n            foreign\r\n            particles by chemical signals released by the body. As seen above, when eventually coming into contact with\r\n            their target, they bind, and then engulf them. Here-in lies the problem; the ink particles are too big to be\r\n            ingested by the Phagocytes, so instead are held in place in the layers of skin by its Collagen network (the\r\n            skins main structural protein).\r\n          </h5>\r\n          <h5>\r\n            So now you may be beginning to get an <i>inkling</i> as to how tattoos can be removed. The aforementioned\r\n            Q-switched lasers emit a centralised burst of light, targeting a specific spectrum of color represented in\r\n            the tattoo (e.g. black, red, etc.). This means that for tattoos with differing colours, multiple lasers\r\n            must be used. The laser is fired at these pigments, and as it hits, in nanoseconds they are heated up by\r\n            thousands of degrees, eventually emitting the contained energy as a shockwave, in a process known\r\n            as <b>Photothermolysis</b>. The shockwave ripples through the dermis of the skin, causing weaker structures\r\n            to break apart, while larger, stronger ones, merely vibrate. Once the tattoo pigment has been broken up into\r\n            smaller fragments, the Phagocytes can then fully engulf and dispose of them.\r\n          </h5>\r\n          <h5>\r\n            The whole process can take 6-8 sessions of laser removal for a normal sized tattoo, and up to 10 sessions\r\n            for\r\n            larger tattoos, with a total cost from anywhere between £270 to £600 <a\r\n            href=\"https://graziadaily.co.uk/life/real-life/10-things-need-know-laser-tattoo-removal/\">[2]</a>.\r\n          </h5>\r\n          <h5>\r\n            So, given the fact that over 1 in 4 individuals are reported as regretting ever getting a tattoo <a\r\n            href=\"https://www.advdermatology.com/blog/statistics-surrounding-tattoo-regret\">[1]</a>, there's hope on\r\n            the horizon with this amazing technology. So your mate Dave with his 'sick' <b>NO RAGRETS</b> graffiti\r\n            across\r\n            his chest can still have some optimism.\r\n          </h5>\r\n        </div>\r\n      </PostContent>\r\n    );\r\n  }\r\n};","import React, { Component, CSSProperties } from 'react';\r\nimport { IPostCollection } from '../../../assets/PostCollection';\r\nimport { Card } from 'react-bootstrap';\r\n\r\ninterface PostsProps {\r\n  entry: IPostCollection;\r\n  match: any;\r\n}\r\n\r\nexport class Posts extends Component<PostsProps, {}> {\r\n\r\n  render() {\r\n    return (\r\n      <Card style={styles.cardFont}>\r\n        <Card.Img variant=\"top\" src={this.props.entry.widgetImage}/>\r\n        <Card.Header><h5>{this.props.entry.title}</h5></Card.Header>\r\n        <Card.Body>\r\n          <Card.Text>{this.props.entry.subTitle}</Card.Text>\r\n          <footer className=\"blockquote-footer\">\r\n            <cite title=\"Date\">{this.props.entry.date}</cite>\r\n          </footer>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  cardFont: {\r\n    fontFamily: 'DM Serif Display'\r\n  } as CSSProperties\r\n};","import TattooRemovalPost from './tattoo-removal/tattooRemoval.json';\r\nimport CloudFormationPost from './cloud-formation/cloudFormation.json';\r\n\r\nexport interface IPostCollection {\r\n  title: string;\r\n  subTitle: string;\r\n  author: string;\r\n  category: string;\r\n  link: string;\r\n  date: string;\r\n  widgetImage: string;\r\n  widgetImageAlt: string;\r\n  contentKey: string;\r\n}\r\n\r\nexport const PostCollection: IPostCollection[] = [\r\n  CloudFormationPost,\r\n  CloudFormationPost,\r\n  TattooRemovalPost,\r\n  CloudFormationPost,\r\n  TattooRemovalPost,\r\n  CloudFormationPost,\r\n  TattooRemovalPost,\r\n  CloudFormationPost,\r\n  TattooRemovalPost\r\n];","import React, { Component, CSSProperties } from 'react';\r\nimport { Posts } from './Posts';\r\nimport { CardColumns } from 'react-bootstrap';\r\nimport { PostCollection } from '../../../assets/PostCollection';\r\nimport { Redirect } from 'react-router';\r\n\r\ninterface PostContainerProps {\r\n  match: any;\r\n}\r\n\r\ninterface PostContainerState {\r\n  link: string;\r\n  redirect: boolean;\r\n}\r\n\r\nexport class PostContainer extends Component<PostContainerProps, PostContainerState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      link: '',\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  private handlePostSwitch(link: string): void {\r\n    const currentRedirectState = this.state.redirect;\r\n    this.setState({\r\n      link: link,\r\n      redirect: !currentRedirectState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect push to={`${this.props.match.url.slice(0, -1)}${this.state.link}`}/>;\r\n    }\r\n\r\n    return (\r\n      <CardColumns>\r\n        {PostCollection.map((entry, key) => {\r\n          return (\r\n            <div onClick={() => this.handlePostSwitch(entry.link)}\r\n                 style={styles.cardContainer}>\r\n              <Posts entry={entry} match={this.props.match} key={key}/>\r\n            </div>\r\n          );\r\n        })}\r\n      </CardColumns>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  cardContainer: {\r\n    cursor: 'pointer'\r\n  }\r\n};\r\n","import { Container, Jumbotron } from 'react-bootstrap';\r\nimport React from 'react';\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <Jumbotron fluid>\r\n      <Container>\r\n        <h1>Welcome to the Philpy Thought Shower</h1>\r\n        <p>\r\n          This is a modified jumbotron that occupies the entire horizontal space of\r\n          its parent.\r\n        </p>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default Banner;","import React, { Component, CSSProperties } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { PostContainer } from './posts/PostContainer';\r\nimport Banner from './header/banner/Banner';\r\n\r\ninterface DashboardProps {\r\n  match: any;\r\n}\r\n\r\nexport default class Dashboard extends Component<DashboardProps, {}> {\r\n  render() {\r\n    return (\r\n      <Container style={styles.container}>\r\n        <Banner/>\r\n        <PostContainer match={this.props.match}/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    paddingTop: 25,\r\n    paddingBottom: 25\r\n  } as CSSProperties\r\n};","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport About from '../about/About';\r\nimport CloudFormation from '../../assets/cloud-formation/CloudFormation';\r\nimport TattooRemoval from '../../assets/tattoo-removal/TattooRemoval';\r\nimport Dashboard from '../dashboard/Dashboard';\r\n\r\nconst Router = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path='/' component={Dashboard}/>\r\n        <Route path='/about' component={About}/>\r\n        <Route path='/tattoo-removal' component={TattooRemoval}/>\r\n        <Route path='/cloud-theory' component={CloudFormation}/>\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Router;","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { NavigationBar } from './components/navbar/NavigationBar';\r\nimport { Footer } from './components/footer/Footer';\r\nimport Router from './components/router/Router';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter basename={'/blog'}>\r\n        <NavigationBar/>\r\n        <Router/>\r\n      </BrowserRouter>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport const register = (config?: Config) => {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n};\n\nconst registerValidSW = (swUrl: string, config?: Config) => {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n};\n\nconst checkValidServiceWorker = (swUrl: string, config?: Config) => {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n};\n\nexport const unregister = () => {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}